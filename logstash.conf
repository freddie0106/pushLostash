input {
  tcp {
    port => 1514
    type => "syslog"
  }
}
###
filter {
  if [message] =~ /^(\d+ <\d+>1 \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}\+00:00 \S+ heroku router -)/ {
    grok {
      match => {
        "message" => "%{NUMBER:num} <%{NUMBER:priority}>%{NUMBER:version} %{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:host} heroku router - %{GREEDYDATA:router_info}"
      }
    }
    kv {
      source => "router_info"
      field_split => " "
      value_split => "="
      include_keys => ["request_id", "method", "path", "host", "fwd", "dyno", "connect", "service", "status", "bytes", "protocol"]
    }
    mutate {
      add_field => { "[@metadata][target_index]" => "router_logs" }
      remove_field => ["message", "router_info"]
    }
  }

  else if [message] =~ /app web\.1/ and [message] !~ /production/ {
    mutate {
      add_field => { "[@metadata][target_index]" => "apache_logs" }
    }
  }

  else if [message] =~ /production/ {
    mutate {
      add_field => { "[@metadata][target_index]" => "app_logs" }
    }
    grok {
      match => { "message" => "%{NUMBER:syslog_prefix} <%{NUMBER:priority}>%{NUMBER:version} %{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:host} %{DATA:app} - \[%{GREEDYDATA:ignored}\] \[%{GREEDYDATA}\] production.INFO: Request Logged: %{GREEDYDATA:json_message}" }
    }
    json {
      source => "json_message"
      target => "log_data"
    }
    mutate {
      copy => {
        "[log_data][IP]" => "ClientIP"
        "[log_data][User Type]" => "UserType"
        "[log_data][User ID]" => "UserID"
        "[log_data][RequestId]" => "request_id"
        "[log_data][Input]" => "UserInput"
        "[log_data][Route]" => "Route"
      }
      remove_field => ["json_message", "log_data", "message"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://172.31.37.98:9200"]
    user => "elastic"
    password => "poper."
    index => "%{[@metadata][target_index]}"
    document_id => "%{request_id}"
  }
}

